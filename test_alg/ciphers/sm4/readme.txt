XTS模式
    注意事项：
        1. 该模式下，密钥长度为双倍，其中AES-128需要256位密钥，AES-256需要512位密钥，SM4需要256位密钥
        2. 该模式下，输入的IV长度为128位，在XTS中称为“tweak”
        3. 该模式下，输入的明文长度必须 >= 128位（不少于一个分组）
        4. 该模式下，输入的明文长度不需要是16字节的整数倍，OpenSSL中在处理非整数倍长度时，采用的是“ciphertext stealing”技术
        5. XTS模式主要用于磁盘加密，适合随机读写场景
        6. XTS模式下，IV（tweak）通常是基于数据块的逻辑位置（如扇区号）生成的，确保每个数据块有唯一的IV
        7. XTS模式不提供数据完整性保护

CCM和GCM模式
    注意事项：
        1. 该模式下，密钥长度为128位、192位或256位（当前算法为SM4,所以是128位）
        2. 该模式下，由于加密部分使用的是CTR模式，所以不需要补位
        3. CCM模式下，Nonce（IV）长度可以是7~13字节，推荐使用12字节
        4. GCM模式下，Nonce（IV）长度是任意长度，但推荐使用12字节，如果不是12字节，则会在内部进行处理
        5. CCM模式下，TAG（MAC）长度可以是32、48、64、80、96、104、112或128位，偶数长度4, 6, 8, 10, 12, 14, 16字节，推荐使用128位
        6. GCM模式下，TAG（MAC）长度可以1-16字节，实现上一般是4-16字节，推荐使用16字节
        7. CCM模式下，必须提前告知明文长度，顺序严格：先设置nonce/tag长度->再设置key/iv->再告知总长度->再处理ADD->最后数据，
            原因：CBC-MAC部分需要知道总长度才能计算
        8. GCM模式下，不需要提前告知明文长度，顺序灵活：key/iv->ADD（可选）->数据 -> Final -> get/setTag
            原因：GCM的GHASH认证函数是流式累加的，不依赖总长度
        9. CCM相对GCM来说，性能较低，但在资源受限的环境下（如嵌入式设备）更适合，GCM广泛应用于高性能网络通信中
        10. CCM模式，Nonce严禁重复使用，否则会导致严重的安全漏洞，tag长度越长，安全性越高
        11. GCM模式，Nonce推荐使用12字节且严禁重复使用


CTR模式
    注意事项：
        1. 该模式下，密钥长度为128位、192位或256位（当前算法为SM4,所以是128位）
        2. 该模式下，IV/Nonce长度为128位
        3. 该模式下，不需要补位，明文可以是任意长度
        4. CTR模式将块密码转换为流密码，适合加密大数据量或流数据
        5. CTR模式下，IV/Nonce必须唯一，不能重复使用，否则会导致严重的安全漏洞
        6. CTR模式不提供数据完整性保护，通常与MAC算法结合使用以确保数据完整性
        7. CTR模式允许并行处理多个块，提高加密/解密速度，适合高性能应用

ECB模式
    注意事项：
        1. 该模式下，密钥长度为128位、192位或256位（当前算法为SM4,所以是128位）
        2. 该模式下，输入的明文长度必须是16字节的整数倍
        3. 该模式下，不需要IV
        4. ECB模式简单且易于实现，但不推荐用于加密敏感数据，因为相同的明文块会被加密为相同的密文块，容易受到频率分析攻击
        5. ECB模式不提供数据完整性保护，通常与MAC算法结合使用以确保数据完整性
        6. 对于大多数应用场景，建议使用更安全的模式如CBC、GCM或CTR


CBC模式
    注意事项：
        1. 该模式下，密钥长度为128位、192位或256位（当前算法为SM4,所以是128位）
        2. 该模式下，输入的明文长度必须是16字节的整数倍，如果不是，需要进行填充（如PKCS#7填充）
        3. 该模式下，IV长度为128位，且每次加密时应使用唯一且不可预测的IV
        4. CBC模式通过将前一个密文块与当前明文块进行异或操作来增加随机性，提高安全性
        5. CBC模式不允许并行处理，因为每个块的加密依赖于前一个块的密文
        6. CBC模式不提供数据完整性保护，通常与MAC算法结合使用以确保数据完整性
        7. 在解密过程中，必须正确处理填充，否则可能导致填充攻击


CFB模式
    注意事项：
        1. 该模式下，密钥长度为128位、192位或256位（当前算法为SM4,所以是128位）
        2. 该模式下，IV长度为128位，且每次加密时应使用唯一且不可预测的IV
        3. 该模式下，不需要对明文进行填充，明文可以是任意长度
        4. CFB模式将块密码转换为流密码，适合加密大数据量或流数据
        5. CFB模式允许部分块加密，可以处理小于块大小的数据
        6. CFB模式不提供数据完整性保护，通常与MAC算法结合使用以确保数据完整性
        7. CFB模式不允许并行处理，因为每个块的加密依赖于前一个块的密文


OFB模式
    注意事项：
        1. 该模式下，密钥长度为128位、192位或256位（当前算法为SM4,所以是128位）
        2. 该模式下，IV长度为128位，且每次加密时应使用唯一且不可预测的IV
        3. 该模式下，不需要对明文进行填充，明文可以是任意长度
        4. OFB模式将块密码转换为流密码，适合加密大数据量或流数据
        5. OFB模式允许部分块加密，可以处理小于块大小的数据
        6. OFB模式不提供数据完整性保护，通常与MAC算法结合使用以确保数据完整性
        7. OFB模式允许并行处理多个块，提高加密/解密速度，适合高性能应用
